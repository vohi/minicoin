Vagrant.configure('2') do |config|
    config.vm.guest = :darwin
    config.vm.provider :aws
    config.vm.provider :aws do |aws, override|
        aws.ami = "ami-0e985ceaa52d29eda" # macOS Monterey 12.1
        aws.instance_type = "mac1.metal"
        aws.tenancy = "dedicated"

        # Use userdata to bootstrap the machine with the vagrant user and the insecure
        # ssh key. Could inject the user's public key here, but keeping it simple for now.
        # The lstrip is needed for the shebang to work.
        aws.user_data = <<-BASH.lstrip
            #!/bin/bash
            echo 'bootstrapping vagrant user' > /tmp/user_data.log
            useradd -m vagrant -s /bin/bash
            touch /etc/sudoers.d/vagrant
            echo 'vagrant ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/vagrant

            mkdir -p /home/vagrant/.ssh
            curl -o /home/vagrant/.ssh/authorized_keys https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub
            chown -R vagrant:vagrant /home/vagrant/.ssh

            echo 'user vagrant created' >> /tmp/user_data.log
        BASH

        # the default user in the VM is not vagrant, so we have to set that explicitly
        override.ssh.username = "vagrant"

        # As long as we bootstrap with the default insecure key we need to use it to authenticate.
        override.ssh.private_key_path = "~/.vagrant.d/insecure_private_key"

    end
end
