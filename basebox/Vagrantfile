# -*- mode: ruby -*-
# vi: set ft=ruby :

def get_boxes()
  boxes = []
  Dir["../minicoin/boxes/*"].each do |namespace|
    Dir["#{namespace}/*"].each do |box|
      boxes << { :namespace => File.basename(namespace), :boxfile => File.basename(box, ".json") }
    end
  end
  return boxes
end

# This is a generic Vagrant configuration that allows launching
# a virtual machine from an available box. This is not useful to do
# for anything except for maintaining base boxes incrementally without
# having to keep VMs alive and eating disk-space in VirtualBox.
Vagrant.configure("2") do |config|
  boxes = get_boxes()
  boxes.each do |box|
    namespace = box[:namespace]
    boxfile = box[:boxfile]
    config.vm.define "#{boxfile}-basebox" do |basebox|
      basebox.vm.box = "#{namespace}/#{boxfile}"
      basebox.vm.box_url = "https://tqtcvagrantboxes.z16.web.core.windows.net/tqtc/#{ENV['minicoin_key']}/#{box[:boxfile]}.json"
      basebox.vm.provider "virtualbox" do |vb|
        vb.name = "#{boxfile}-basebox"
        vb.gui = true
        vb.cpus = 4
        vb.memory = 8196
      end

      basebox.vm.provider :vmware_desktop do |vmware|
        vmware.linked_clone = false
        vmware.gui = true
        vmware.vmx["numvcpus"] = 4
        vmware.vmx["memsize"] = 8196
      end

      # don't share anything
      basebox.vm.synced_folder ".", "/vagrant", disabled: true

      # since we launch a base box to maintain it as a base box...
      basebox.winssh.insert_key = false
      basebox.ssh.insert_key = false

      is_windows = (boxfile.include? "windows")
      is_mac = (boxfile.include? "mac")

      if is_windows
        basebox.vm.guest = :windows
        basebox.vm.communicator = :winrm
      elsif is_mac
        basebox.vm.guest = :darwin
      else
        basebox.vm.guest = :linux
      end
    end
  end
end
