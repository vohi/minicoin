#!/usr/bin/env bash

source=$(readlink $0)
if [[ $source == "" ]]; then
  if [[ $WINDIR != "" ]]; then
    source=$(realpath $0)
  else
    echo "This script expects to be run via a symlink!"
    exit 1
  fi
fi

minicoin_dir=$(dirname $source)
project_dir="$PWD"
[[ -z $MINICOIN_PROJECT_DIR ]] && export MINICOIN_PROJECT_DIR="$PWD"

function run() {
  cd $minicoin_dir
  "$@"
  error=$?
  cd "$project_dir"
  return $error
}

minicoin_command=
min_args=1

if [[ $# > 0 ]]; then
  if [ $1 == "update" ]; then
    minicoin_command=minicoin_update
    min_args=0
    shift
  elif [[ "$1" == "help" && "$2" == "" ]]; then
    minicoin_command="vagrant help"
    min_arg=0
    shift
  elif [[ $minicoin_command == "" ]]; then
    run vagrant "$@"
    exit $?
  fi
fi

if [ "$#" -lt $min_args ]; then
  echo "Controls the minicoin environment by forwarding calls to vagrant or executing"
  echo "a job on machines, operating on the code in the current working environment."
  echo
  echo "Usage: $(basename $0) <command> [options]"
  echo
  echo "Common commands:"
  echo "  run [options] job [job-args] machine1 machine2 ... [-- extra job-args]"
  echo
  echo "    Runs a job on one or more machines using the appropriate remoting mechanism."
  echo
  echo "  list"
  echo
  echo "    Quickly lists the available machines, highlighting created machines."
  echo
  echo "  ls [--path path] machine1 [machine2]"
  echo
  echo "    Shows the contents of 'path' for each machine."
  echo
  echo "  update"
  echo
  echo "    Fetches the latest version of minicoin and rebases the local version to it."
  echo
  echo "  <vagrant-command> [options] [machines...]"
  echo "    status      outputs status of the machines"
  echo "    up          starts and provisions the machines"
  echo "    halt        stops the machines"
  echo "    destroy     stops and deletes all traces of the machines"
  echo "    ssh         connects to a machine via SSH"
  echo
  echo "  For help on any individual command run 'minicoin help <command>'."
  echo "  To see all commands, run 'minicoin list-commands'."
  echo
  exit 1
fi

machines=()
job="-1"
script_args=()
args=()

for arg in "${@}"; do
  args+=("$arg")
  if [[ "$arg" = "--" ]]; then
    job="--"
  elif [[ "$job" = '-1' ]]; then
    machines+=("$arg")
  else
    script_args+=("$arg")
  fi
done

function minicoin_update()
{
  run git pull --rebase --autostash
}

$minicoin_command
exit $?
